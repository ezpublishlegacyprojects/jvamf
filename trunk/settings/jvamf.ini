#?ini charset="utf-8"?
# DO NOT EDIT THIS FILE ! MAKE AN OVERRIDE INSTEAD

# Zend_AMF Server settings
[AMF]
# Class Mapping AS/PHP.
# Using this setting you can explicitly map PHP Class to AS Class.
# Your AS Class MUST have the [RemoteClass] meta tag with the right alias
# Example (in an AS class file) : [RemoteClass(alias="DummyVO")]
# You can also declare the mapping in your PHP VO class with a public property "$_explicitType" 
# (see http://framework.zend.com/manual/en/zend.amf.server.html#zend.amf.server.typedobjects for more info) 
ClassMap[]
#ClassMap[ASClass]=PHPClass
#ClassMap[DummyVO]=DummyVO

# Flag to enable/disable Zend_AMF Server production mode
# Must be enabled in production for security reasons
# With this setting disabled, Zend_AMF Server will be able to throw details of exceptions when throwing exceptions, such as message, exception ID...
ProductionMode=disabled

[Services]
# List of directories where Zend_AMF can find service classes
# File names are case sensitive !
# If you have a class named MyServiceClass, your PHP file must be named MyServiceClass.php
ServicesDir[]
#ServicesDir[]=extension/myextension/classes/services

ServicesClasses[]
ServicesClasses[]=eZContentAMFService

# Allow access to Zend AMF Service explorer
AllowServiceExplorer=false

[ContentSettings]
# Default class used to handle attribute content from content objects
DefaultContentHandler=JVAMFBaseContentHandler

# You can declare here a class used to "format" your content attribute
# This class must implement IJVAMFContentHandler interface
# Returned value can be anything understood by AMF protocol (even typed objects if correctly mapped PHP/ActionScript)
ContentHandlersList[]
ContentHandlersList[ezimage]=JVAMFImageContentHandler

[ImageSettings]
# Image aliases that will be returned for an ezimage attribute
# Must be an alias declared in image.ini
ReturnedImageSizes[]
ReturnedImageSizes[]=small
ReturnedImageSizes[]=medium